---
- name: gathering facts
  setup:

- include: "tasks/{{ ansible_os_family }}-install-pip.yml"
  when: "{{ deploy_aws_cred }}"

- name: create system account
  user:
    name: "{{ system_account }}"
    shell: /bin/bash
    createhome: "{{ createhome }}"
    state: present
    system: "{{ system }}"
    comment: This is an ansbile managed account
  tags:
    - provision-system-account
  when: "not {{ createhome }}"

- name: create system account with home
  user:
    name: "{{ system_account }}"
    shell: /bin/bash
    state: present
    comment: This is an ansbile managed account
    home: "{{ userhome }}"
  tags:
    - provision-system-account
  when: "{{ createhome }}"

- name: provide sudo power
  copy:
    content: |
      %{{ system_account }} ALL=(ALL) NOPASSWD: ALL
    dest: /etc/sudoers.d/{{ system_account }}
    mode: "0440"
  when: "{{ enable_sudoer }}"

- name: disable requiretty for a system account {{ system_account }}
  copy:
    content: |
      Defaults:{{ system_account }} !requiretty
    dest: /etc/sudoers.d/999-disable-requiretty
    mode: 0440
  when: "{{ disable_requiretty }}"
  vars:
    ansible_ssh_pipelining: no
  tags:
    - disable-requiretty

- name: create .aws directory
  file:
    path: /home/{{ system_account }}/.aws
    state: directory
  become: yes
  become_user: "{{ system_account }}"
  when: "{{ deploy_aws_cred }}"
  tags:
    - provision-system-account

- name: generate aws credentials
  copy:
    content: |
      [default]
      AWS_ACCESS_KEY_ID={{ aws_key_id }}
      AWS_SECRET_ACCESS_KEY={{ aws_secret_access_key }}
    dest: /home/{{ system_account }}/.aws/credentials
    mode: "0600"
    owner: "{{ system_account }}"
    group: "{{ system_account }}"
  when: "{{ deploy_aws_cred }}"
  tags:
    - provision-system-account
    - provision-awscli-config

- name: generate aws config
  copy:
    content: |
      [default]
      output = json
    dest: /home/{{ system_account }}/.aws/config
    mode: "0600"
    owner: "{{ system_account }}"
    group: "{{ system_account }}"
  when: "{{ deploy_aws_cred }}"
  tags:
    - provision-system-account
    - provision-awscli-config

- name: install aws sdk
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - awscli
    - boto
  when: "{{ deploy_aws_cred }}"
  tags:
    - provision-system-account
    - install-python-awscli
